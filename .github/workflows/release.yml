name: add release tag
on:
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  check_version:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/v')
    outputs:
      version: ${{ steps.status.outputs.version }}
    steps:
      - id: status
        shell: bash
        env:
          BRANCH: ${{ github.head_ref }}
        run: |
          echo "::set-output name=version::$(echo $BRANCH | cut -d'/' -f2-)"

  add_tag:
    runs-on: ubuntu-latest
    needs: [check_version]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: git config
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: version
        shell: bash
        env:
          VERSION: ${{ needs.check_version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${VERSION}
          git push origin ${VERSION}

  build:
    runs-on: ubuntu-latest
    needs: [check_version]
    steps:
      - uses: actions/checkout@v2
      - name: test
        shell: bash
        env:
          VERSION: ${{ needs.check_version.outputs.version }}
        run: |
          test "v$(cat VERSION)" = ${VERSION}
      - name: zip
        shell: bash
        env:
          VERSION: ${{ needs.check_version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo build
      